{"version":3,"sources":["components/main-page/main-page.js","App.js","serviceWorker.js","index.js"],"names":["MainPage","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDuplicateClick","ref_useAdvance","current","checked","split","RegExp","ref_splitRegexp","value","accordingTo","ref_accordingToRegexp","accordingToIndex","ref_accordingToIndex","ref_textarea_result","duplicate","text","ref_textarea_source","state","React","createRef","inherits","createClass","key","_ref","_ref$split","_ref$accordingTo","_ref$accordingToIndex","array_originalText","array_dealtByAccordingTo","forEach","item","matched","match","push","origin","console","log","uniqBy","map","join","_this2","react_default","a","createElement","className","onClick","type","ref","Component","App","main_page_MainPage","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0ebac6f.chunk.js","sourcesContent":["import {uniqBy} from 'lodash';\r\nimport React, {Component} from 'react';\r\nimport './main-page.scss';\r\n\r\nexport class MainPage extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {};\r\n\r\n    this.ref_useAdvance = React.createRef();\r\n    this.ref_splitRegexp = React.createRef();\r\n    this.ref_accordingToRegexp = React.createRef();\r\n    this.ref_accordingToIndex = React.createRef();\r\n\r\n    this.ref_textarea_source = React.createRef();\r\n    this.ref_textarea_result = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    // 初始化非受控表单\r\n    this.ref_splitRegexp.current.value = '\\\\n';\r\n    this.ref_accordingToRegexp.current.value = '.*';\r\n    this.ref_accordingToIndex.current.value = 0;\r\n  }\r\n\r\n  /**\r\n   * 将文字去重\r\n   * @param text\r\n   * @param split\r\n   * @param accordingTo\r\n   * @param accordingToIndex\r\n   * @returns {*}\r\n   */\r\n  duplicate({text, split = new RegExp('\\\\n'), accordingTo = new RegExp('.*'), accordingToIndex = 0}) {\r\n    const array_originalText = text.split(split);\r\n\r\n    const array_dealtByAccordingTo = [];\r\n    array_originalText.forEach((item) => {\r\n      if (!item) {\r\n        return;\r\n      }\r\n      const matched = item.match(accordingTo);\r\n      if (!matched || !matched[accordingToIndex]) {\r\n        return;\r\n      }\r\n      array_dealtByAccordingTo.push({origin: item, accordingTo: matched[accordingToIndex]});\r\n    });\r\n    console.log(accordingTo,array_originalText,array_dealtByAccordingTo);\r\n\r\n    const array_uniq = uniqBy(array_dealtByAccordingTo, 'accordingTo').map(item => item.origin);\r\n\r\n    return array_uniq.join('\\n');\r\n  }\r\n\r\n\r\n  handleDuplicateClick = () => {\r\n    if (!this.ref_useAdvance.current.checked) {\r\n      this.ref_textarea_result.current.value = this.duplicate({text: this.ref_textarea_source.current.value});\r\n    } else {\r\n      const split = new RegExp(this.ref_splitRegexp.current.value);\r\n      const accordingTo = new RegExp(this.ref_accordingToRegexp.current.value);\r\n      const accordingToIndex = this.ref_accordingToIndex.current.value;\r\n      this.ref_textarea_result.current.value = this.duplicate({\r\n        text: this.ref_textarea_source.current.value,\r\n        split, accordingTo, accordingToIndex,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (<div className='main-page'>\r\n        <div>\r\n          <div>\r\n            <button onClick={() => {\r\n              this.handleDuplicateClick()\r\n            }}>去重\r\n            </button>\r\n          </div>\r\n          <div className=\"advance-options\">\r\n            <div>\r\n              <label><input type='checkbox' ref={this.ref_useAdvance}/>高级</label>\r\n            </div>\r\n            <div>\r\n              <label>分隔符(RegExp)：<input type='text' ref={this.ref_splitRegexp}/></label>\r\n            </div>\r\n            <div>\r\n              <label>根据(RegExp)：<input type='text' ref={this.ref_accordingToRegexp}/></label>\r\n              <label>RegExp Index：<input type='number' ref={this.ref_accordingToIndex}/></label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='content'>\r\n          <div className='content__source'>\r\n            <textarea ref={this.ref_textarea_source}></textarea>\r\n          </div>\r\n          <div className='content__result'>\r\n            <textarea ref={this.ref_textarea_result}></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport './App.css';\r\n\r\nimport {MainPage} from \"./components/main-page/main-page\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <MainPage/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}